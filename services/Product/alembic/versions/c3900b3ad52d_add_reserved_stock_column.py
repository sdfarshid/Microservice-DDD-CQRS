"""add reserved_stock column

Revision ID: c3900b3ad52d
Revises: 
Create Date: 2025-04-25 17:09:34.680805

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c3900b3ad52d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_catalog_products_catalog_id', table_name='catalog_products')
    op.drop_index('ix_catalog_products_product_id', table_name='catalog_products')
    op.drop_table('catalog_products')
    op.drop_table('companies')
    op.drop_table('catalogs')
    op.add_column('products', sa.Column('reserved_stock', sa.Integer(), nullable=True))
    op.execute('UPDATE products SET reserved_stock = 0')
    op.alter_column('products', 'reserved_stock', nullable=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('products', 'reserved_stock')
    op.create_table('catalogs',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='catalogs_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('companies',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('provider_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('registration_number', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('address', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('website', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('status', postgresql.ENUM('active', 'inactive', name='company_status'), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='companies_pkey')
    )
    op.create_table('catalog_products',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('catalog_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('product_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['catalog_id'], ['catalogs.id'], name='catalog_products_catalog_id_fkey'),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name='catalog_products_product_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='catalog_products_pkey')
    )
    op.create_index('ix_catalog_products_product_id', 'catalog_products', ['product_id'], unique=False)
    op.create_index('ix_catalog_products_catalog_id', 'catalog_products', ['catalog_id'], unique=False)
    # ### end Alembic commands ###
